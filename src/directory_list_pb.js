// source: directory_list.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var file_pb = require('./file_pb.js');
goog.object.extend(proto, file_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.bigfile.directory_list.DirectoryListRequest', null, global);
goog.exportSymbol('proto.bigfile.directory_list.DirectoryListRequest.Sort', null, global);
goog.exportSymbol('proto.bigfile.directory_list.DirectoryListResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigfile.directory_list.DirectoryListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bigfile.directory_list.DirectoryListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigfile.directory_list.DirectoryListRequest.displayName = 'proto.bigfile.directory_list.DirectoryListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigfile.directory_list.DirectoryListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bigfile.directory_list.DirectoryListResponse.repeatedFields_, null);
};
goog.inherits(proto.bigfile.directory_list.DirectoryListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigfile.directory_list.DirectoryListResponse.displayName = 'proto.bigfile.directory_list.DirectoryListResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bigfile.directory_list.DirectoryListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigfile.directory_list.DirectoryListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigfile.directory_list.DirectoryListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    secret: (f = msg.getSecret()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    subDir: (f = msg.getSubDir()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    sort: jspb.Message.getFieldWithDefault(msg, 4, 0),
    limit: (f = msg.getLimit()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f),
    offset: (f = msg.getOffset()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigfile.directory_list.DirectoryListRequest}
 */
proto.bigfile.directory_list.DirectoryListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigfile.directory_list.DirectoryListRequest;
  return proto.bigfile.directory_list.DirectoryListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigfile.directory_list.DirectoryListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigfile.directory_list.DirectoryListRequest}
 */
proto.bigfile.directory_list.DirectoryListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setSecret(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setSubDir(value);
      break;
    case 4:
      var value = /** @type {!proto.bigfile.directory_list.DirectoryListRequest.Sort} */ (reader.readEnum());
      msg.setSort(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setLimit(value);
      break;
    case 6:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigfile.directory_list.DirectoryListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigfile.directory_list.DirectoryListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigfile.directory_list.DirectoryListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecret();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getSubDir();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getSort();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getLimit();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getOffset();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bigfile.directory_list.DirectoryListRequest.Sort = {
  DESCTYPE: 0,
  ASCTYPE: 1,
  DESCNAME: 2,
  ASCNAME: 3,
  DESCTIME: 4,
  ASCDESC: 5
};

/**
 * optional string token = 1;
 * @return {string}
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.bigfile.directory_list.DirectoryListRequest.prototype.setToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.StringValue secret = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.getSecret = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.bigfile.directory_list.DirectoryListRequest.prototype.setSecret = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.clearSecret = function() {
  this.setSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.hasSecret = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.StringValue sub_dir = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.getSubDir = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 3));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.bigfile.directory_list.DirectoryListRequest.prototype.setSubDir = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.clearSubDir = function() {
  this.setSubDir(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.hasSubDir = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Sort sort = 4;
 * @return {!proto.bigfile.directory_list.DirectoryListRequest.Sort}
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.getSort = function() {
  return /** @type {!proto.bigfile.directory_list.DirectoryListRequest.Sort} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.bigfile.directory_list.DirectoryListRequest.Sort} value */
proto.bigfile.directory_list.DirectoryListRequest.prototype.setSort = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional google.protobuf.UInt32Value limit = 5;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.getLimit = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 5));
};


/** @param {?proto.google.protobuf.UInt32Value|undefined} value */
proto.bigfile.directory_list.DirectoryListRequest.prototype.setLimit = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.clearLimit = function() {
  this.setLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.UInt32Value offset = 6;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.getOffset = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 6));
};


/** @param {?proto.google.protobuf.UInt32Value|undefined} value */
proto.bigfile.directory_list.DirectoryListRequest.prototype.setOffset = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.clearOffset = function() {
  this.setOffset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bigfile.directory_list.DirectoryListRequest.prototype.hasOffset = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bigfile.directory_list.DirectoryListResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigfile.directory_list.DirectoryListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bigfile.directory_list.DirectoryListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigfile.directory_list.DirectoryListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigfile.directory_list.DirectoryListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pages: jspb.Message.getFieldWithDefault(msg, 3, 0),
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    file_pb.File.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigfile.directory_list.DirectoryListResponse}
 */
proto.bigfile.directory_list.DirectoryListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigfile.directory_list.DirectoryListResponse;
  return proto.bigfile.directory_list.DirectoryListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigfile.directory_list.DirectoryListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigfile.directory_list.DirectoryListResponse}
 */
proto.bigfile.directory_list.DirectoryListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPages(value);
      break;
    case 4:
      var value = new file_pb.File;
      reader.readMessage(value,file_pb.File.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigfile.directory_list.DirectoryListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigfile.directory_list.DirectoryListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigfile.directory_list.DirectoryListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigfile.directory_list.DirectoryListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPages();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      file_pb.File.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 request_id = 1;
 * @return {number}
 */
proto.bigfile.directory_list.DirectoryListResponse.prototype.getRequestId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.bigfile.directory_list.DirectoryListResponse.prototype.setRequestId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 total = 2;
 * @return {number}
 */
proto.bigfile.directory_list.DirectoryListResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.bigfile.directory_list.DirectoryListResponse.prototype.setTotal = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 pages = 3;
 * @return {number}
 */
proto.bigfile.directory_list.DirectoryListResponse.prototype.getPages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.bigfile.directory_list.DirectoryListResponse.prototype.setPages = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated bigfile.file.File files = 4;
 * @return {!Array<!proto.bigfile.file.File>}
 */
proto.bigfile.directory_list.DirectoryListResponse.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.bigfile.file.File>} */ (
    jspb.Message.getRepeatedWrapperField(this, file_pb.File, 4));
};


/** @param {!Array<!proto.bigfile.file.File>} value */
proto.bigfile.directory_list.DirectoryListResponse.prototype.setFilesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.bigfile.file.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bigfile.file.File}
 */
proto.bigfile.directory_list.DirectoryListResponse.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.bigfile.file.File, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.bigfile.directory_list.DirectoryListResponse.prototype.clearFilesList = function() {
  this.setFilesList([]);
};


goog.object.extend(exports, proto.bigfile.directory_list);
